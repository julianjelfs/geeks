<div class="content" ng-controller="FriendsCtrl">
    <div class="span4">
        <h2 class="geek">Friends</h2>
    </div>
    
        @Html.AntiForgeryToken()

    <div class="btn-group pull-right">
        
        <a ng-class="prevClass" ng-click="prev()">Prev</a>
        <a ng-class="nextClass" ng-click="next()">Next</a>

        <add-friend></add-friend>
        <delete-friend warning="#delete-all-warning"></delete-friend>
        <a id="import-drop" href="#" class=" btn dropdown-toggle" data-toggle="dropdown">Import <b class="caret"></b></a>
        <ul class="dropdown-menu" role="menu" aria-labelledby="import-drop">
            <li role="presentation">
                <a role="menuItem" tabindex="-1" href="/geeks/Import/OAuth">Import from Google</a>
            </li>
        </ul>
    </div>
    
    <input style="margin-left:10px;margin-right: 10px" class="pull-right" type="text" ng-change="searchArgs.pageIndex = 0;search()" placeholder="Search" ng-model="searchArgs.friendSearch" />
        
    <div class="pull-right">
        <text>Unrated Friends : </text>
        <input type="checkbox" ng-change="search()" ng-model="searchArgs.unratedFriends" />
    </div>
    
    <div id="table-placeholder" ng-show="friends.length > 0">
        
        
        <table class="table table-hover">
            <thead>
                <tr>
                    <th></th>
                    <th>Name</th>
                    <th>Email</th>
                    <th width="40px"></th>
                    <th width="40px"></th>
                </tr>
            </thead>
            <tbody>
                <tr ng-repeat="friend in friends">
                    <td><img ng-src="{{friend.GravatarLink}}"/></td>
                    <td truncate="30" ng-bind="friend.Name"></td>
                    <td truncate="30" ng-bind="friend.Email"></td>
                    <td>
                        <rate-friend></rate-friend>                        
                    </td>
                    <td>
                        <delete-friend warning="#delete-warning"></delete-friend>
                    </td>
                </tr>
            </tbody>
        </table>
        
        <div id="delete-warning" class="modal hide">
            <div class="modal-header">
                <h3 class="geek">Delete Friend</h3>
            </div>
            <div class="modal-body">
                <p>
                    Are you sure you want to delete this friend? You will not be able to invite them to events any more if you do.
                </p>
            </div>
            <div class="modal-footer">
                <button accesskey="N" class="btn btn-danger" data-dismiss="modal" aria-hidden="true">No</button>
                <input accesskey="Y" id="delete-friend" type="button" class="btn" value="Yes" ng-click="deleteFriend()" /> 
            </div>
        </div>
        
        <div id="delete-all-warning" class="modal hide">
            <div class="modal-header">
                <h3 class="geek">Delete All Friends</h3>
            </div>
            <div class="modal-body">
                <p>
                    Are you sure you want to delete all of your friends? You will not be able to invite them to events and you will lose all your ratings.
                </p>
            </div>
            <div class="modal-footer">
                <button accesskey="N" class="btn btn-danger" data-dismiss="modal" aria-hidden="true">No</button>
                <button accesskey="Y" class="btn" ng-click="deleteAllFriends()">Yes</button>
            </div>
        </div>
        
        <div id="add-friend" class="modal hide">
            <div class="modal-header">
                <h3 class="geek">Add a new friend</h3>
            </div>
            <div class="modal-body">
                <input type="text" ng-model="newFriend.name" placeholder="Friend's Name" required />
                <input type="text" ng-model="newFriend.email" placeholder="Friend's Email Address" required />
            </div>
            <div class="modal-footer">
                <button accesskey="A" class="btn btn-danger" ng-click="addFriend()">Add</button>
                <button accesskey="C" class="btn" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>

</div>

@section scripts{
    <script src="../js/ranking.js" type="text/javascript"></script>
    <script type="text/javascript">
        $("#nav-bar li.active").removeClass("active");
        $("#friends-nav").addClass("active");

        var app = angular.module("geeks");
        app.controller("FriendsCtrl", function($scope, $http, listData, xsrfPost) {
        
            $scope.searchArgs = {
                pageIndex: 0,
                pageSize: 10,
                friendSearch: null,
                unratedFriends: false
            };
            
            $scope.addFriend = function() {
                xsrfPost.post('/geeks/Home/AddFriend/', {
                    name : $scope.newFriend.name,
                    email : $scope.newFriend.email
                }).success(function() {
                    angular.element("#add-friend").modal("hide");
                    $scope.search();
                });
            }

            $scope.search = function() {
                listData.get("/geeks/Home/FriendsData", $scope.searchArgs).success(function(data) {
                    $scope.friends = data.Friends;
                    $scope.numberOfPages = data.NumberOfPages;
                    $scope.prevClass = data.PageIndex > 0 ? "btn" : "btn disabled";
                    $scope.nextClass = data.PageIndex + 1 >= data.NumberOfPages ? "btn disabled" : "btn";
                });
            };
            $scope.next = function() {
                if ($scope.searchArgs.pageIndex + 1 >= $scope.numberOfPages)
                    return;
                $scope.searchArgs.pageIndex += 1;
                $scope.search();
            };
            $scope.prev = function() {
                if ($scope.searchArgs.pageIndex <= 0)
                    return;
                $scope.searchArgs.pageIndex -= 1;
                $scope.search();
            };
            $scope.deleteFriend = function() {
                xsrfPost.post('/geeks/Home/DeleteFriend/' + $scope.selectedFriend.PersonId).success(function() {
                    angular.element("#delete-warning").modal("hide");
                    $scope.search();
                });
            };
            $scope.deleteAllFriends = function() {
                xsrfPost.post('/geeks/Home/DeleteAllFriends').success(function() {
                    angular.element("#delete-all-warning").modal("hide");
                    $scope.search();
                });
            };
            $scope.search();
        }).directive("addFriend", function() {
            return {
                restrict: "E",
                replace: true,
                template : "<button class='btn' ng-click='showAddFriend()'><i class='icon icon-plus'></i></button>",
                link: function(scope, el, atts) {
                    scope.showAddFriend = function() {
                        angular.element("#add-friend").modal("show");
                    };
                }
            };
        }).directive("rateFriend", function($compile, xsrfPost) {
            var regex = new RegExp("{x}", "g");
            var rankHtml = "<div>";
            var rankButton = "<span ng-click='rateFriend({x})' ng-class='ratingClass({x})'>{x}</span>";
            for (var i = 0; i < 10; i++) {
                rankHtml += rankButton.replace(regex,i+1);
            }
            rankHtml += "</div>";
            console.log("created popover template");
            var popover;

            return {
                restrict: "E",
                replace: true,
                template: "<button title='Rate your friend' class='rating btn'><span ng-class='ratingClass(friend.Rating)'>{{friend.Rating}}</span></button>",
                link: function(scope, el, atts) {
                    console.log("linking add friend");
                    el.popover({
                        content: $compile(rankHtml)(scope),
                        placement: "top",
                        trigger: "manual",
                        html: true,
                        title: ''
                    }).click(function(){
                        if(popover != null && popover != el)
                            popover.popover("hide");
                        el.popover("show");
                        popover = el;
                    });

                    scope.ratingClass = function(index){
                        var cls = "rank badge";
                        if(index <= scope.friend.Rating
                            && scope.friend.Rating > 0)
                            cls += " badge-warning";
                        return cls;
                    }

                    scope.rateFriend = function(rating) {
                        console.log("Rating friend " + scope.friend.Name + " as " + rating);
                        scope.friend.Rating = rating;
                        xsrfPost.post('/geeks/Home/RateFriend', {
                            id : scope.friend.PersonId,
                            rating : rating
                        }).success(function() {
                            el.popover("hide");
                        });
                    };
                }
            };
        }).directive("deleteFriend", function() {
            return {
                restrict: "E",
                replace: true,
                template: "<button ng-click='confirmDelete()' class='btn'><i class='icon-trash'></i></button>",
                link: function(scope, el, atts) {
                    scope.confirmDelete = function() {
                        scope.$parent.selectedFriend = scope.friend;
                        angular.element(atts.warning).modal("show");
                    };
                }
            };
        }).directive("truncate", function() {
            return {
                priority: -1,
                link: function(scope, el, atts) {
                    scope.$watch(atts.ngBind, function(value) {
                        var len = parseInt(atts.truncate);
                        el.text(value == undefined
                            ? '' : (value.length > len
                                ? value.substring(0, len) + '...' : value));
                    });
                }
            };
        });
    </script>
}