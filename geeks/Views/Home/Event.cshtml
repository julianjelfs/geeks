@model geeks.Models.EventModel

@{
    ViewBag.Title = "Event";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content">
    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.CreatedBy)
        <div class="row-fluid">
            <div class="span6">
                <fieldset>
                    <legend class="geek">Enter details to create a new event</legend>
                    @Html.TextBoxFor(m => m.Title, htmlAttributes: new { @class = "input-xxlarge input-block-level", @placeholder = "Title", @style="width:100%" })
                    @Html.ValidationMessageFor(m => m.Title)
                    @Html.TextAreaFor(m => m.Description, htmlAttributes: new { @class = "input-xxlarge input-block-level", @placeholder = "Description", @style = "width:100%" })
                    @Html.ValidationMessageFor(m => m.Description)
                    @Html.TextBoxFor(m => m.Date, htmlAttributes: new { @class = "input-xxlarge input-block-level", @placeholder = "Date and time", @style = "width:100%" })
                    @Html.ValidationMessageFor(m => m.Date)
                    <br/>
                    @Html.TextBoxFor(m => m.Venue, htmlAttributes: new { @class = "input-xxlarge input-block-level", @placeholder = "Venue", @style = "width:100%" })
                    @Html.ValidationMessageFor(m => m.Venue)
                    <br/>
                    <button class="btn" type="submit">Save</button>
                    <br/>
                    @Html.ActionLink("Back to list", "Events", "Home")
                </fieldset>
            </div>
            <div class="span6">
                <fieldset ng-app>
                    <legend class="geek">Who's invited</legend>
                    <input class="typeahead" type="text" placeholder="Type here to find friends to add" data-provide="typeahead" autocomplete="false" style="width:98%" />
                    <div ng-controller="InviteesCtrl" id="friends-placeholder">
                        <div id="invitees" class="well well-small">
                            <div ng-repeat="invitee in invitees" class="alert alert-info">
                                <button ng-click="remove(invitee.userId)" type="button" class="close" data-dismiss="alert">&times;</button>
                                {{invitee.email}}
                                <input type='hidden' name='Invitees[{{$index}}].UserId' value='{{invitee.userId}}' />
                            </div>
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>
    }
</div>

@section scripts{
    <script type="text/javascript">
        function InviteesCtrl($scope) {
            $scope.invitees = [];
            @if (Model.Invitees.Any())
            {
                for (var i = 0; i < Model.Invitees.Count; i++)
                {
                    <text>
                    $scope.invitees.push({ userId: '@Model.Invitees[i].UserId', email: '@Model.Invitees[i].Email' });
                    </text>
                }
            }
            
            $scope.add = function(obj) {
                $scope.invitees.push({
                        email : obj.email,
                        userId : obj.userId
                    });
            };

            $scope.remove = function(userId) {
                $scope.invitees = $.grep($scope.invitees, function(item) {
                    return item.userId != userId;
                });
            };
        }
        
        $(function() {
            var map = {};
            $('.typeahead').typeahead({
                updater: function(item) {
                    var scope = angular.element("#friends-placeholder").scope();
                    scope.$apply(function() {
                        scope.add({
                            userId: map[item],
                            email: item
                        });
                    });
                    return "";
                },
                source: function(query, process) {
                    return $.get('@Url.Action("LookupFriends", "Home")', { query: query }, function(data) {
                        var emails = [];
                        map = data;
                        for (var prop in data) {
                            emails.push(prop);
                        }
                        return process(emails);
                    });
                }
            });
        });
    </script>
}