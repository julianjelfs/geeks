@{
    ViewBag.Title = "Map";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content ng-scope" ng-controller="MapCtrl">
    <div class="row-fluid">
        <div class="span3">
            <h3 class="geek">Map</h3>

            <ul>
                <li ng-repeat="marker in myMarkers">
                    <a ng-click="myMap.panTo(marker.getPosition())">Pan to Marker {{$index}}</a>
                </li>
            </ul>
 
            <!-- this is the confusing part. we have to point the map marker directive
                at an existing google.maps.Marker object, so it can hook up events -->
            <div ng-repeat="marker in myMarkers" ui-map-marker="myMarkers[$index]"
                 ui-event="{'map-click': 'openMarkerInfo(marker)'}">
            </div>
        </div>
        <div id="map_canvas" ui-map="myMap" class="map span8"
             ui-event="{'map-click': 'addMarker($event)' }"
             ui-options="mapOptions">
        </div>
    </div>
 
    <div ui-map-info-window="myInfoWindow">
        <h1>Marker</h1>
        Lat: <input ng-model="currentMarkerLat">, Lng: <input ng-model="currentMarkerLng">
        <a ng-click="setMarkerPosition(currentMarker, currentMarkerLat, currentMarkerLng)">Set Position</a>
    </div>
 
</div>

@section scripts{
    <script type="text/javascript">

        function MapCtrl($scope) {
            $scope.myMarkers = [];

            $scope.mapOptions = {
                center: new google.maps.LatLng(51.509, -0.115),
                zoom: 12,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };

            $scope.addMarker = function($event) {
                $scope.myMarkers.push(new google.maps.Marker({
                    map: $scope.myMap,
                    position: $event.latLng
                }));
            };

            $scope.openMarkerInfo = function(marker) {
                $scope.currentMarker = marker;
                $scope.currentMarkerLat = marker.getPosition().lat();
                $scope.currentMarkerLng = marker.getPosition().lng();
                $scope.myInfoWindow.open($scope.myMap, marker);
            };

            $scope.setMarkerPosition = function(marker, lat, lng) {
                marker.setPosition(new google.maps.LatLng(lat, lng));
            };
        }

    </script>
}